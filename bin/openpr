#!/bin/bash

# Author: William Heryanto

# fuction to show help mesage
usage() {
	cat <<END
Open PR to master branch from other branch.

Usage:
  openpr [option]

Flags:
  -h: show the help message
  -b: specifying branch argument
  -u: open PR to upstream master branch
END
}

# function to handle erros
error() {
	echo "Error: $1"
	exit $2
} >&2

get_remote() {
	if git remote get-url $1 2>&1 >/dev/null; then
		git remote get-url $1 | sed -e 's/git@github.com://' -e 's/\/.*//'
	else
		error "Remote $1 not found" 1
	fi
}

# get the current active branch
current_branch=$(git rev-parse --abbrev-ref HEAD)
target_branch='master'
remote_repository="origin"

while [[ $# -gt 0 ]]; do
	key="$1"
	case $key in
	-b | --branch)
		target_branch="$2"
		shift
		shift
		;;
	-u | --upstream)
		if [[ -z $2 || ${2::1} == "-" ]]; then
			remote_repository="upstream"
			shift
		else
			remote_repository="$2"
			shift
			shift
		fi
		;;
	-h | --help)
		usage
		shift
		exit 0
		;;
	*)
		error "argument not supported" 1
		;;
	esac
done

# verify to not in master branch
if [[ $target_branch = $current_branch ]]; then
	error "The target branch is the same as current branch" 1
fi

# retrieve repo url
repository_url=$(git remote get-url $remote_repository | sed -e 's/git@//' -e 's/:/\//' -e 's/.git//')

declare pr_url

# handling upstream
if [[ $remote_repository != 'origin' ]]; then
	if get_remote $remote_repository 2>&1 >/dev/null; then
		origin=$(get_remote origin)
		remote=$(get_remote $remote_repository)
		pr_url="https://$repository_url/compare/$remote:$target_branch...$origin:$current_branch"
	fi
else
	pr_url="https://$repository_url/compare/$target_branch...$current_branch"
fi

open "$pr_url"

exit 0
